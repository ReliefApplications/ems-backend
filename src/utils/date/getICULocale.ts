/** Default language code */
const DEFAULT_LANGUAGE_CODE = 'en';

/** Supported ICU codes */
const SUPPORTED_ICU_CODES = [
  'af',
  'sq',
  'am',
  'ar',
  'hy',
  'as',
  'az',
  'bn',
  'be',
  'bn',
  'bs',
  'bs_Cyrl',
  'bg',
  'my',
  'ca',
  'chr',
  'zh',
  'zh_Hant',
  'hr',
  'cs',
  'da',
  'nl',
  'dz',
  'en',
  'en_US',
  'en_US_POSIX',
  'eo',
  'et',
  'ee',
  'fo',
  'fil',
  'fi',
  'fr',
  'fr_CA',
  'gl',
  'ka',
  'de',
  'de_AT',
  'el',
  'gu',
  'ha',
  'haw',
  'he',
  'hi',
  'hu',
  'is',
  'ig',
  'smn',
  'id',
  'ga',
  'it',
  'ja',
  'kl',
  'kn',
  'kk',
  'km',
  'kok',
  'ko',
  'jl',
  'ky',
  'lkt',
  'lo',
  'lv',
  'ln',
  'lt',
  'dsb',
  'lb',
  'mk',
  'ms',
  'ml',
  'mt',
  'mr',
  'mn',
  'ne',
  'se',
  'nb',
  'nn',
  'or',
  'om',
  'ps',
  'fa',
  'fa_AF',
  'pl',
  'pt',
  'pa',
  'ro',
  'ru',
  'sr',
  'sr_Latn',
  'si',
  'sk',
  'sl',
  'es',
  'sw',
  'sv',
  'ta',
  'te',
  'th',
  'bo',
  'to',
  'tr',
  'uk',
  'hsb',
  'ur',
  'ug',
  'vi',
  'wae',
  'cy',
  'yi',
  'yo',
  'zu',
];

/**
 * Gets the ICU locale ID from the language code from the request headers.
 * If the language code is not supported, the default locale ID is returned.
 *
 * @param lang Language from request headers.
 * @returns The ICU locale ID.
 */
export const getICULocale = (lang: string | undefined): string => {
  const languageCode = lang ?? DEFAULT_LANGUAGE_CODE;
  return SUPPORTED_ICU_CODES.includes(languageCode)
    ? languageCode
    : DEFAULT_LANGUAGE_CODE;
};
